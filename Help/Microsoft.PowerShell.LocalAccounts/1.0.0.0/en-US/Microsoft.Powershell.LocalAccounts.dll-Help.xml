<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" schema="maml" xmlns="http://msh">
  <command:command>
    <command:details>
      <command:name>Add-LocalGroupMember</command:name>
      <maml:description>
        <maml:para>Adds members to a local group.</maml:para>
      </maml:description>
      <command:verb>Add</command:verb>
      <command:noun>LocalGroupMember</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Add-LocalGroupMember` cmdlet adds users or groups to a local security group. All the rights and permissions that are assigned to a group are assigned to all members of that group.</maml:para>
      <maml:para>Members of the Administrators group on a local computer have Full Control permissions on that computer. Limit the number of users in the Administrators group.</maml:para>
      <maml:para>If the computer is joined to a domain, you can add user accounts, computer accounts, and group accounts from that domain and from trusted domains to a local group.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; If the computer is joined to a domain and you try to add a local user that has the same name as a &gt; member of the domain it adds the domain member.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>Specifies the security group to which this cmdlet adds members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet adds to a security group. You can specify
users or groups by name, security ID (SID), or **LocalPrincipal** objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet adds to a security group. You can specify
users or groups by name, security ID (SID), or **LocalPrincipal** objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the security group to which this cmdlet adds members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Add-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet adds to a security group. You can specify
users or groups by name, security ID (SID), or **LocalPrincipal** objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID of the security group to which this cmdlet adds members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>Specifies the security group to which this cmdlet adds members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Member</maml:name>
        <maml:description>
          <maml:para>Specifies an array of users or groups that this cmdlet adds to a security group. You can specify
users or groups by name, security ID (SID), or **LocalPrincipal** objects.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the security group to which this cmdlet adds members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID of the security group to which this cmdlet adds members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local principal to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Add-LocalGroupMember`:

- `algm`

The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit
system.

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Add members to the Administrators group ---------</maml:title>
        <maml:introduction>
          <maml:para>This command adds several members to the local Administrators group. The new members include a local
user account, a Microsoft account, a Microsoft Entra account, and a domain group. This example uses a
placeholder value for the user name of an account at Outlook.com.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```powershell
Add-LocalGroupMember -Group "Administrators" -Member "Admin02", "MicrosoftAccount\username@Outlook.com", "AzureAD\DavidChew@contoso.com", "CONTOSO\Domain Admins"
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/add-localgroupmember?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroupMember</maml:linkText>
        <command:uri>Get-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroupMember</maml:linkText>
        <command:uri>Remove-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Disable-LocalUser</command:name>
      <maml:description>
        <maml:para>Disables a local user account.</maml:para>
      </maml:description>
      <command:verb>Disable</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Disable-LocalUser` cmdlet disables local user accounts. When a user account is disabled, the user cannot log on. When a user account is enabled, the user can log on.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The **Microsoft.PowerShell.LocalAccounts** module is not available in 32-bit PowerShell on a &gt; 64-bit system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Disable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies an array of user accounts that this cmdlet disables. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Disable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of the user accounts that this cmdlet disables.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Disable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of user accounts that this cmdlet disables.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies an array of user accounts that this cmdlet disables. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of the user accounts that this cmdlet disables.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of user accounts that this cmdlet disables.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local user this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Disable-LocalUser`:

- `dlu`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Disable an account by specifying a name ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Disable-LocalUser -Name "Admin02"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command disables the user account named Admin02.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Disable an account by using the pipeline ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Get-LocalUser Guest | Disable-LocalUser
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command gets the built-in Guest account by using `Get-LocalUser`, and then passes it to the
current cmdlet by using the pipeline operator(`|`). That cmdlet disables that account.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/disable-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Enable-LocalUser</command:name>
      <maml:description>
        <maml:para>Enables a local user account.</maml:para>
      </maml:description>
      <command:verb>Enable</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Enable-LocalUser` cmdlet enables local user accounts. When a user account is disabled, the user cannot log on. When a user account is enabled, the user can log on.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Enable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies an array of user accounts that this cmdlet enables. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Enable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of the user accounts that this cmdlet enables.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Enable-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of user accounts that this cmdlet enables.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies an array of user accounts that this cmdlet enables. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of the user accounts that this cmdlet enables.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of user accounts that this cmdlet enables.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local user to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Enable-LocalUser`:

- `elu`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Enable an account by specifying a name ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Enable-LocalUser -Name "Admin02"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command enables the user account named Admin02.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Enable an account by using the pipeline ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Get-LocalUser -Name "Administrator" | Enable-LocalUser
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>In this example, `Get-LocalUser` gets the Administrator account and passes it to `Enable-LocalUser`
by using the pipeline operator.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/enable-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-LocalGroup</command:name>
      <maml:description>
        <maml:para>Gets the local security groups.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>LocalGroup</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Get-LocalGroup` cmdlet gets local security groups in Security Account Manager. This cmdlet gets default built-in groups and local security groups that you create.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of security groups that this cmdlet gets. You can use the wildcard
character.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of security IDs (SIDs) of security groups that this cmdlet gets.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of security groups that this cmdlet gets. You can use the wildcard
character.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of security IDs (SIDs) of security groups that this cmdlet gets.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns a local group.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Get-LocalGroup`:

- `glg`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Get the Administrators group ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Get-LocalGroup -Name "Administrators"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command gets the local Administrators group. The command displays properties of the group in
the console.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/get-localgroup?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroup</maml:linkText>
        <command:uri>Remove-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalGroup</maml:linkText>
        <command:uri>Rename-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalGroup</maml:linkText>
        <command:uri>Set-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-LocalGroupMember</command:name>
      <maml:description>
        <maml:para>Gets members from a local group.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>LocalGroupMember</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Get-LocalGroupMember` cmdlet gets members from a local group.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies a user or group that this cmdlet gets from a security group. You can specify users or
groups by name or security ID (SID). Specify SID strings in S-R-I-S-S . . . format. You can use
wildcard characters. If you do not specify this parameter, the cmdlet gets all members of the group.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the security group from which this cmdlet gets members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LocalGroupMember</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>Specifies the security group from which this cmdlet gets members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies a user or group that this cmdlet gets from a security group. You can specify users or
groups by name or security ID (SID). Specify SID strings in S-R-I-S-S . . . format. You can use
wildcard characters. If you do not specify this parameter, the cmdlet gets all members of the group.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies a user or group that this cmdlet gets from a security group. You can specify users or
groups by name or security ID (SID). Specify SID strings in S-R-I-S-S . . . format. You can use
wildcard characters. If you do not specify this parameter, the cmdlet gets all members of the group.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID of the security group from which this cmdlet gets members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>Specifies the security group from which this cmdlet gets members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Member</maml:name>
        <maml:description>
          <maml:para>Specifies a user or group that this cmdlet gets from a security group. You can specify users or
groups by name or security ID (SID). Specify SID strings in S-R-I-S-S . . . format. You can use
wildcard characters. If you do not specify this parameter, the cmdlet gets all members of the group.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the security group from which this cmdlet gets members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID of the security group from which this cmdlet gets members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local group to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>Microsoft.SecurityAccountsManager.LocalPrincipal</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns local principals.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Get-LocalGroupMember`:

- `glgm`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Get all members of the Administrators group ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Get-LocalGroupMember -Group "Administrators"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command gets all the members of the local Administrators group.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/get-localgroupmember?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-LocalGroupMember</maml:linkText>
        <command:uri>Add-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroupMember</maml:linkText>
        <command:uri>Remove-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Get-LocalUser</command:name>
      <maml:description>
        <maml:para>Gets local user accounts.</maml:para>
      </maml:description>
      <command:verb>Get</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Get-LocalUser` cmdlet gets local user accounts. This cmdlet gets default built-in user accounts, local user accounts that you created, and local accounts that you connected to Microsoft accounts.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of user accounts that this cmdlet gets. You can use the wildcard
character.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of security IDs (SIDs) of user accounts that this cmdlet gets.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of user accounts that this cmdlet gets. You can use the wildcard
character.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of security IDs (SIDs) of user accounts that this cmdlet gets.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns local user accounts.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Get-LocalUser`:

- `glu`

The **PrincipalSource** property on **LocalUser**, **LocalGroup**, and **LocalPrincipal** objects
describes the source of the object. The possible sources are as follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Get an account by using its name ---------</maml:title>
        <maml:introduction>
          <maml:para>This example gets a user account named AdminContoso02.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```powershell
Get-LocalUser -Name "AdminContoso02"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```Output
Name             Enabled Description
----             ------- -----------
AdminContoso02   True    Description of this account.
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Get an account that is connected to a Microsoft account ---------</maml:title>
        <maml:introduction>
          <maml:para>This example gets a user account that is connected to a Microsoft account. This example uses a
placeholder value for the username of an account at Outlook.com.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```powershell
Get-LocalUser -Name "MicrosoftAccount\username@Outlook.com"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```Output
Name                                    Enabled  Description
----                                    -------  -----------
MicrosoftAccount\username@outlook.com  True     Description of this account.
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 3: Get an account that has the specified SID ---------</maml:title>
        <maml:introduction>
          <maml:para>This example gets a local user account that has the specified SID.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```powershell
Get-LocalUser -SID S-1-5-21-9526073513-1762370368-3942940353-500
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```Output
Name          Enabled Description
----          ------- -----------
Administrator True    Built-in account for administering the computer/domain
```</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/get-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>New-LocalGroup</command:name>
      <maml:description>
        <maml:para>Creates a local security group.</maml:para>
      </maml:description>
      <command:verb>New</command:verb>
      <command:noun>LocalGroup</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `New-LocalGroup` cmdlet creates a local security group in the Security Account Manager.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the group. The maximum length is 256 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies a name for the group. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specifies a comment for the group. The maximum length is 256 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies a name for the group. The maximum length is 48 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns a **LocalGroup** object representing the created security group.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `New-LocalGroup`:

- `nlg`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- `Local`
- `Active Directory`
- `AzureAD`
- `MicrosoftAccount`

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Create a security group ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
New-LocalGroup -Name "SecurityGroup04"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command creates a group named SecurityGroup04.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/new-localgroup?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroup</maml:linkText>
        <command:uri>Get-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroup</maml:linkText>
        <command:uri>Remove-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalGroup</maml:linkText>
        <command:uri>Rename-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalGroup</maml:linkText>
        <command:uri>Set-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>New-LocalUser</command:name>
      <maml:description>
        <maml:para>Creates a local user account.</maml:para>
      </maml:description>
      <command:verb>New</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `New-LocalUser` cmdlet creates a local user account. This cmdlet creates a local user account.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module isn't available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountExpires</maml:name>
          <maml:description>
            <maml:para>Specifies when the user account expires. You can use the `Get-Date` cmdlet to get a **DateTime**
object. If you don't specify this parameter, the account doesn't expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates that the account doesn't expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Disabled</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet creates the user account as disabled.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the user name for the user account.</maml:para>
            <maml:para>A user name can contain up to 20 uppercase characters or lowercase characters. A user name can't
contain the following characters:</maml:para>
            <maml:para>`"`, `/`, `\`, `[`, `]`, `:`, `;`, `|`, `=`, `,`, `+`, `*`, `?`, `&lt;`, `&gt;`, `@`</maml:para>
            <maml:para>A user name can't consist only of periods `.` or spaces.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>Specifies a password for the user account. You can use `Read-Host -AsSecureString`,
`Get-Credential`, or `ConvertTo-SecureString` to create a **SecureString** object for the password.</maml:para>
            <maml:para>If you omit the **Password** and **NoPassword** parameters, `New-LocalUser` prompts you for the new
user's password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>PasswordNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates whether the new user's password expires.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UserMayNotChangePassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user can't change the password on the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet isn't run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountExpires</maml:name>
          <maml:description>
            <maml:para>Specifies when the user account expires. You can use the `Get-Date` cmdlet to get a **DateTime**
object. If you don't specify this parameter, the account doesn't expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates that the account doesn't expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Disabled</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet creates the user account as disabled.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the user name for the user account.</maml:para>
            <maml:para>A user name can contain up to 20 uppercase characters or lowercase characters. A user name can't
contain the following characters:</maml:para>
            <maml:para>`"`, `/`, `\`, `[`, `]`, `:`, `;`, `|`, `=`, `,`, `+`, `*`, `?`, `&lt;`, `&gt;`, `@`</maml:para>
            <maml:para>A user name can't consist only of periods `.` or spaces.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>NoPassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user account doesn't have a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UserMayNotChangePassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user can't change the password on the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet isn't run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AccountExpires</maml:name>
        <maml:description>
          <maml:para>Specifies when the user account expires. You can use the `Get-Date` cmdlet to get a **DateTime**
object. If you don't specify this parameter, the account doesn't expire.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AccountNeverExpires</maml:name>
        <maml:description>
          <maml:para>Indicates that the account doesn't expire.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Disabled</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet creates the user account as disabled.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>FullName</maml:name>
        <maml:description>
          <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the user name for the user account.</maml:para>
          <maml:para>A user name can contain up to 20 uppercase characters or lowercase characters. A user name can't
contain the following characters:</maml:para>
          <maml:para>`"`, `/`, `\`, `[`, `]`, `:`, `;`, `|`, `=`, `,`, `+`, `*`, `?`, `&lt;`, `&gt;`, `@`</maml:para>
          <maml:para>A user name can't consist only of periods `.` or spaces.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>NoPassword</maml:name>
        <maml:description>
          <maml:para>Indicates that the user account doesn't have a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>Specifies a password for the user account. You can use `Read-Host -AsSecureString`,
`Get-Credential`, or `ConvertTo-SecureString` to create a **SecureString** object for the password.</maml:para>
          <maml:para>If you omit the **Password** and **NoPassword** parameters, `New-LocalUser` prompts you for the new
user's password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.SecureString</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>PasswordNeverExpires</maml:name>
        <maml:description>
          <maml:para>Indicates whether the new user's password expires.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>UserMayNotChangePassword</maml:name>
        <maml:description>
          <maml:para>Indicates that the user can't change the password on the user account.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet isn't run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.DateTime</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a **DateTime** object to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Boolean</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a boolean value to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.SecureString</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a secure string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns a **LocalUser** object representing the created user account.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `New-LocalUser`:

- `nlu`

A user name can't be identical to any other user name or group name on the computer. A user name
can't consist only of periods `.` or spaces. A user name can contain up to 20 uppercase characters
or lowercase characters. A user name can't contain the following characters:

`"`, `/`, `\`, `[`, `]`, `:`, `;`, `|`, `=`, `,`, `+`, `*`, `?`, `&lt;`, `&gt;`, `@`

A password can contain up to 127 characters.

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- `Local`
- `Active Directory`
- `AzureAD`
- `MicrosoftAccount`

&gt; [!NOTE]
&gt; **PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of
&gt; the Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Create a user account ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
New-LocalUser -Name 'User02' -Description 'Description of this account.' -NoPassword
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```output
Name    Enabled  Description
----    -------  -----------
User02  True     Description of this account.
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command creates a local user account and doesn't specify the **AccountExpires** or
**Password** parameters. The account doesn't expire or have a password.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Create a user account that has a password ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
$Password = Read-Host -AsSecureString
$params = @{
    Name        = 'User03'
    Password    = $Password
    FullName    = 'Third User'
    Description = 'Description of this account.'
}
New-LocalUser @params
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>```output
Name    Enabled  Description
----    -------  -----------
User03  True     Description of this account.
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>The first command uses the `Read-Host` cmdlet to prompts you for a password. The command stores the
password as a secure string in the `$Password` variable.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>The second command creates a local user account and sets the new account's password to the secure
string stored in `$Password`. The command specifies a user name, full name, and description for the
user account.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/new-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Remove-LocalGroup</command:name>
      <maml:description>
        <maml:para>Deletes local security groups.</maml:para>
      </maml:description>
      <command:verb>Remove</command:verb>
      <command:noun>LocalGroup</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Remove-LocalGroup` cmdlet deletes local security groups. This cmdlet deletes only a local group. It does not delete the user accounts, computer accounts, or group accounts that belong to that group. You cannot recover a deleted group.</maml:para>
      <maml:para>If you delete a group and then create another group that has the same group name, you must set new permissions for the new group. The new group does not inherit the permissions that were assigned to the group.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies an array of security groups that this cmdlet deletes. To obtain groups, use the
`Get-LocalGroup` cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of the security groups that this cmdlet deletes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of security IDs (SIDs) of security groups that this cmdlet deletes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies an array of security groups that this cmdlet deletes. To obtain groups, use the
`Get-LocalGroup` cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of the security groups that this cmdlet deletes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of security IDs (SIDs) of security groups that this cmdlet deletes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a security group to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Remove-LocalGroup`:

- `rlg`

This cmdlet cannot delete the following default groups:

- Administrators
- Backup Operators
- Cryptographic Operators
- Distributed COM Users
- Event Log Readers
- Guests
- Hyper-V Administrators
- IIS_IUSRS
- Network Configuration Operators
- Performance Log Users
- Performance Monitor Users
- Power Users
- Remote Desktop Users
- Remote Management Users
- Replicator
- Users
- WinRMRemoteWMIUsers__

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Delete a security group ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Remove-LocalGroup -Name "SecurityGroup04"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command deletes the group named SecurityGroup04.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/remove-localgroup?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroup</maml:linkText>
        <command:uri>Get-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalGroup</maml:linkText>
        <command:uri>Rename-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalGroup</maml:linkText>
        <command:uri>Set-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Remove-LocalGroupMember</command:name>
      <maml:description>
        <maml:para>Removes members from a local group.</maml:para>
      </maml:description>
      <command:verb>Remove</command:verb>
      <command:noun>LocalGroupMember</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Remove-LocalGroupMember` cmdlet removes users or groups from a local group.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Group</maml:name>
          <maml:description>
            <maml:para>Specifies the security group from which this cmdlet removes members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet removes from a security group. You can
specify users or groups by name, security ID (SID), or **LocalPrincipal** objects. Specify SID
strings in S-R-I-S-S . . . format.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet removes from a security group. You can
specify users or groups by name, security ID (SID), or **LocalPrincipal** objects. Specify SID
strings in S-R-I-S-S . . . format.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the security group from which this cmdlet removes members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalGroupMember</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Member</maml:name>
          <maml:description>
            <maml:para>Specifies an array of users or groups that this cmdlet removes from a security group. You can
specify users or groups by name, security ID (SID), or **LocalPrincipal** objects. Specify SID
strings in S-R-I-S-S . . . format.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID of the security group from which this cmdlet removes members.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Group</maml:name>
        <maml:description>
          <maml:para>Specifies the security group from which this cmdlet removes members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Member</maml:name>
        <maml:description>
          <maml:para>Specifies an array of users or groups that this cmdlet removes from a security group. You can
specify users or groups by name, security ID (SID), or **LocalPrincipal** objects. Specify SID
strings in S-R-I-S-S . . . format.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalPrincipal[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the security group from which this cmdlet removes members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID of the security group from which this cmdlet removes members.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalPrincipal</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local principal to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Remove-LocalGroupMember`:

- `rlgm`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Remove members from the Administrators group ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
$members = "Admin02", "MicrosoftAccount\username@Outlook.com", "AzureAD\DavidChew@contoso.com", "CONTOSO\Domain Admins"
Remove-LocalGroupMember -Group "Administrators" -Member $members
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command removes several members from the local Administrators group. The members that this
cmdlet removes include a local user account, a Microsoft account, a Microsoft Entra account,
and a domain group. This example uses a placeholder value for the user name of an account at
Outlook.com.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/remove-localgroupmember?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-LocalGroupMember</maml:linkText>
        <command:uri>Add-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroupMember</maml:linkText>
        <command:uri>Get-LocalGroupMember.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Remove-LocalUser</command:name>
      <maml:description>
        <maml:para>Deletes local user accounts.</maml:para>
      </maml:description>
      <command:verb>Remove</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Remove-LocalUser` cmdlet deletes local user accounts.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies an array of user accounts that this cmdlet deletes. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of names of the user accounts that this cmdlet deletes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies an array of security IDs (SIDs) of user accounts that this cmdlet deletes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies an array of user accounts that this cmdlet deletes. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of names of the user accounts that this cmdlet deletes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies an array of security IDs (SIDs) of user accounts that this cmdlet deletes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier[]</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local user to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Remove-LocalUser`:

- `rlu`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Delete a user account ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Remove-LocalUser -Name "AdminContoso02"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command deletes the user account named AdminContoso02.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>&gt; [!NOTE]
&gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit
&gt; system.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/remove-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Rename-LocalGroup</command:name>
      <maml:description>
        <maml:para>Renames a local security group.</maml:para>
      </maml:description>
      <command:verb>Rename</command:verb>
      <command:noun>LocalGroup</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The **Rename-LocalGroup** cmdlet renames a local security group.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Rename-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies the security group that this cmdlet renames.
To obtain a security group, use the Get-LocalGroup cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the security group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Rename-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the security group that this cmdlet renames.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the security group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Rename-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the security group.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID (SID) of a security group that this cmdlet renames.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies the security group that this cmdlet renames.
To obtain a security group, use the Get-LocalGroup cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the security group that this cmdlet renames.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>NewName</maml:name>
        <maml:description>
          <maml:para>Specifies a new name for the security group.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID (SID) of a security group that this cmdlet renames.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs.
The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a security group to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Rename-LocalGroup`:

- `rnlg`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Change the name of a group ---------</maml:title>
        <maml:introduction>
          <maml:para>```
PS C:\&gt; Rename-LocalGroup -Name "SecurityGroup" -NewName "SecurityGroup04"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command renames a security group named SecurityGroup.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/rename-localgroup?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroup</maml:linkText>
        <command:uri>Get-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroup</maml:linkText>
        <command:uri>Remove-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalGroup</maml:linkText>
        <command:uri>Set-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Rename-LocalUser</command:name>
      <maml:description>
        <maml:para>Renames a local user account.</maml:para>
      </maml:description>
      <command:verb>Rename</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Rename-LocalUser` cmdlet renames a local user account.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Rename-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies the user account that this cmdlet renames. To obtain a user account, use the Get-LocalUser
cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Rename-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the user account that this cmdlet renames.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Rename-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>NewName</maml:name>
          <maml:description>
            <maml:para>Specifies a new name for the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID (SID) of a user accounts that this cmdlet renames.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies the user account that this cmdlet renames. To obtain a user account, use the Get-LocalUser
cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the user account that this cmdlet renames.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>NewName</maml:name>
        <maml:description>
          <maml:para>Specifies a new name for the user account.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID (SID) of a user accounts that this cmdlet renames.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local user to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Rename-LocalUser`:

- `rnlu`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Rename a user account ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Rename-LocalUser -Name "Admin02" -NewName "AdminContoso02"
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command renames the user account named Admin02.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/rename-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-LocalUser</maml:linkText>
        <command:uri>Set-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-LocalGroup</command:name>
      <maml:description>
        <maml:para>Changes a local security group.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>LocalGroup</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Set-LocalGroup` cmdlet changes a local security group.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the group. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies the security group that this cmdlet changes. To obtain a security group, use the
Get-LocalGroup cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the group. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the security group that this cmdlet changes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-LocalGroup</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the group. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID (SID) of the security group that this cmdlet changes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specifies a comment for the group. The maximum length is 48 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies the security group that this cmdlet changes. To obtain a security group, use the
Get-LocalGroup cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalGroup</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the security group that this cmdlet changes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID (SID) of the security group that this cmdlet changes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalGroup</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a security group to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Set-LocalGroup`:

- `slg`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Change a group description ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Set-LocalGroup -Name "SecurityGroup04" -Description "This is a sample description."
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command changes the description of a local group.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>&gt; [!NOTE]
&gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit
&gt; system.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/set-localgroup?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalGroup</maml:linkText>
        <command:uri>Get-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalGroup</maml:linkText>
        <command:uri>New-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalGroup</maml:linkText>
        <command:uri>Remove-LocalGroup.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalGroup</maml:linkText>
        <command:uri>Rename-LocalGroup.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command>
    <command:details>
      <command:name>Set-LocalUser</command:name>
      <maml:description>
        <maml:para>Modifies a local user account.</maml:para>
      </maml:description>
      <command:verb>Set</command:verb>
      <command:noun>LocalUser</command:noun>
    </command:details>
    <maml:description>
      <maml:para>The `Set-LocalUser` cmdlet modifies a local user account. This cmdlet can reset the password of a local user account.</maml:para>
      <maml:para>&gt; [!NOTE] &gt; The Microsoft.PowerShell.LocalAccounts module is not available in 32-bit PowerShell on a 64-bit &gt; system.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountExpires</maml:name>
          <maml:description>
            <maml:para>Specifies when the user account expires. To obtain a **DateTime** object, use the `Get-Date` cmdlet.</maml:para>
            <maml:para>If you do not want the account to expire, specify the **AccountNeverExpires** parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates that the account does not expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of the user account that this cmdlet changes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>Specifies a password for the user account. If the user account is connected to a Microsoft account,
do not set a password.</maml:para>
            <maml:para>You can use `Read-Host -AsSecureString`, `Get-Credential`, or `ConvertTo-SecureString` to create a
**SecureString** object for the password.</maml:para>
            <maml:para>If you omit the **Password** and **NoPassword** parameters, `Set-LocalUser` prompts you for the
user's password.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Security.SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>PasswordNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates whether the password expires.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UserMayChangePassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user can change the password on the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountExpires</maml:name>
          <maml:description>
            <maml:para>Specifies when the user account expires. To obtain a **DateTime** object, use the `Get-Date` cmdlet.</maml:para>
            <maml:para>If you do not want the account to expire, specify the **AccountNeverExpires** parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates that the account does not expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Specifies the user account that this cmdlet changes. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>Specifies a password for the user account. If the user account is connected to a Microsoft account,
do not set a password.</maml:para>
            <maml:para>You can use `Read-Host -AsSecureString`, `Get-Credential`, or `ConvertTo-SecureString` to create a
**SecureString** object for the password.</maml:para>
            <maml:para>If you omit the **Password** and **NoPassword** parameters, `Set-LocalUser` prompts you for the
user's password.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Security.SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>PasswordNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates whether the password expires.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UserMayChangePassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user can change the password on the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-LocalUser</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountExpires</maml:name>
          <maml:description>
            <maml:para>Specifies when the user account expires. To obtain a **DateTime** object, use the `Get-Date` cmdlet.</maml:para>
            <maml:para>If you do not want the account to expire, specify the **AccountNeverExpires** parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>AccountNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates that the account does not expire.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>Specifies a password for the user account. If the user account is connected to a Microsoft account,
do not set a password.</maml:para>
            <maml:para>You can use `Read-Host -AsSecureString`, `Get-Credential`, or `ConvertTo-SecureString` to create a
**SecureString** object for the password.</maml:para>
            <maml:para>If you omit the **Password** and **NoPassword** parameters, `Set-LocalUser` prompts you for the
user's password.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Security.SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>PasswordNeverExpires</maml:name>
          <maml:description>
            <maml:para>Indicates whether the password expires.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
          <maml:name>SID</maml:name>
          <maml:description>
            <maml:para>Specifies the security ID (SID) of the user account that this cmdlet changes.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>UserMayChangePassword</maml:name>
          <maml:description>
            <maml:para>Indicates that the user can change the password on the user account.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AccountExpires</maml:name>
        <maml:description>
          <maml:para>Specifies when the user account expires. To obtain a **DateTime** object, use the `Get-Date` cmdlet.</maml:para>
          <maml:para>If you do not want the account to expire, specify the **AccountNeverExpires** parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.DateTime</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>AccountNeverExpires</maml:name>
        <maml:description>
          <maml:para>Indicates that the account does not expire.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specifies a comment for the user account. The maximum length is 48 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>FullName</maml:name>
        <maml:description>
          <maml:para>Specifies the full name for the user account. The full name differs from the user name of the user
account.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Specifies the user account that this cmdlet changes. To obtain a user account, use the
`Get-LocalUser` cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Microsoft.PowerShell.Commands.LocalUser</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of the user account that this cmdlet changes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.String</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>Specifies a password for the user account. If the user account is connected to a Microsoft account,
do not set a password.</maml:para>
          <maml:para>You can use `Read-Host -AsSecureString`, `Get-Credential`, or `ConvertTo-SecureString` to create a
**SecureString** object for the password.</maml:para>
          <maml:para>If you omit the **Password** and **NoPassword** parameters, `Set-LocalUser` prompts you for the
user's password.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Security.SecureString</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>PasswordNeverExpires</maml:name>
        <maml:description>
          <maml:para>Indicates whether the password expires.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="none">
        <maml:name>SID</maml:name>
        <maml:description>
          <maml:para>Specifies the security ID (SID) of the user account that this cmdlet changes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">System.Security.Principal.SecurityIdentifier</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>UserMayChangePassword</maml:name>
        <maml:description>
          <maml:para>Indicates that the user can change the password on the user account.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Boolean</command:parameterValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="Named" aliases="none">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.SwitchParameter</command:parameterValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <dev:name>System.Management.Automation.SecurityAccountsManager.LocalUser</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a local user to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.String</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a string to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <dev:name>System.Security.Principal.SecurityIdentifier</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>You can pipe a SID to this cmdlet.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <dev:name>None</dev:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet returns no output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>Windows PowerShell includes the following aliases for `Set-LocalUser`:

- `slu`

The **PrincipalSource** property is a property on **LocalUser**, **LocalGroup**, and
**LocalPrincipal** objects that describes the source of the object. The possible sources are as
follows:

- Local
- Active Directory
- Microsoft Entra group
- Microsoft Account

**PrincipalSource** is supported only by Windows 10, Windows Server 2016, and later versions of the
Windows operating system. For earlier versions, the property is blank.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>--------- Example 1: Change a description of a user account ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
Set-LocalUser -Name "Admin07" -Description "Description of this account."
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>This command changes the description of a user account named Admin07.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
      <command:example>
        <maml:title>--------- Example 2: Change the password on an account ---------</maml:title>
        <maml:introduction>
          <maml:para>```powershell
$Password = Read-Host -AsSecureString
$UserAccount = Get-LocalUser -Name "User02"
$UserAccount | Set-LocalUser -Password $Password
```</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>The first command prompts you for a password by using the Read-Host cmdlet. The command stores the
password as a secure string in the $Password variable.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>The second command gets a user account named User02 by using `Get-LocalUser`. The command stores the
account in the $UserAccount variable.</maml:para>
          <maml:para>&#x80;</maml:para>
          <maml:para>The third command sets the new password on the user account stored in `$UserAccount`.</maml:para>
        </maml:introduction>
        <dev:code />
        <dev:remarks />
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version</maml:linkText>
        <command:uri>https://learn.microsoft.com/powershell/module/microsoft.powershell.localaccounts/set-localuser?view=powershell-5.1&amp;WT.mc_id=ps-gethelp</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-LocalUser</maml:linkText>
        <command:uri>Disable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-LocalUser</maml:linkText>
        <command:uri>Enable-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-LocalUser</maml:linkText>
        <command:uri>Get-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-LocalUser</maml:linkText>
        <command:uri>New-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-LocalUser</maml:linkText>
        <command:uri>Remove-LocalUser.md</command:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Rename-LocalUser</maml:linkText>
        <command:uri>Rename-LocalUser.md</command:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>